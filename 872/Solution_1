class Solution {
    public boolean leafSimilar(TreeNode root1, TreeNode root2) {
        List<Integer> list1 = getLeaves(root1), list2 = getLeaves(root2);
        if(list1.size()!=list2.size()) {
            return false;
        }
        for(int i=0; i<list1.size(); i++) {
            if(list1.get(i)!=list2.get(i)) {
                return false;
            }
        }
        return true;
    }
    
    public List<Integer> getLeaves(TreeNode root) {
        List<Integer> list = new ArrayList<>();
        Stack<TreeNode> stack = new Stack<>();
        stack.push(root);
        while(!stack.isEmpty()) {
            TreeNode tmp = stack.pop();
            if(tmp.left!=null) {
                stack.push(tmp.left);
            }
            if(tmp.right!=null) {
                stack.push(tmp.right);
            }
            if(tmp.left==null&&tmp.right==null) {
                list.add(tmp.val);
            }
        }
        return list;
    }
}
//Time:O(m+n), Space:O(m+n)
