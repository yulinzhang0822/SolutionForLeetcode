class Solution {
    public ListNode reverseBetween(ListNode head, int m, int n) {
        if(m==n){
            return head;
        }
        ListNode curr = head, prev = null;
        ListNode begin = null;
        ListNode newHead = null;
        while(curr!=null){
            m--;
            n--;
            if(m<0&&n>=0){
                ListNode tmp = curr.next;
                if(prev==newHead){
                    prev.next = null;
                }
                curr.next = prev;
                prev = curr;
                curr = tmp;
                if(curr==null&&begin!=null){
                    begin.next = prev;
                    break;
                }
                continue;
            }
            if(m==0){
                if(prev==null){
                    begin = null;
                    newHead = head;
                }else{
                    begin = prev;
                    begin.next = null;
                    newHead = curr;
                }
            }
            if(n<0){
                if(begin!=null){
                    begin.next = prev;
                }
                newHead.next = curr;
                break;
            }
            prev = curr;
            curr = curr.next;
        }
        if(newHead==head){
            head = prev;
        }
        return head;
    }
}
